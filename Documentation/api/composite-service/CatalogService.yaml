swagger: '2.0'
info:
  title: Catalogue-Service API
  description: Catalogue service API
  version: 1.0.0
host: 'localhost:8888'
schemes:
  - http
basePath: /Eshop
produces:
  - application/json
tags:
  - name: Product
    description: Product Elements
paths:
  /product:
    get:
      summary: Get Products
      description: Get all products in eShop.
      tags:
        - Product
      parameters:
        - name: user
          description: User nickname
          in: header
          required: true
          type: string
      responses:
        '200':
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new product.
      summary: Add Product
      tags:
        - Product
      parameters:
        - name: product
          description: Product to add
          in: body
          required: true
          schema:
            $ref: '#/definitions/product'
        - name: user
          in: header
          description: User nickname
          required: true
          type: string
      responses:
        '200':
          description: Successful creation of new Product
          schema:
            $ref: '#/definitions/product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/product/{id}':
    get:
      summary: Get prodtct by id
      description: Get coresponding product by id.
      operationId: findProductById
      tags:
        - Product
      parameters:
        - name: id
          in: path
          description: ID of product to fetch.
          required: true
          type: number
          format: integer
        - name: user
          in: header
          description: User nickname
          required: true
          type: string
      responses:
        '200':
          description: A product with given id.
          schema:
            $ref: '#/definitions/product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update product
      description: Update product with given id
      operationId: updateProductById
      tags:
        - Product
      parameters:
        - name: id
          in: path
          description: ID of product to fetch.
          required: true
          type: number
          format: integer
        - name: user
          in: header
          description: User nickname
          required: true
          type: string
      responses:
        '200':
          description: The updated product.
          schema:
            $ref: '#/definitions/product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete project
      description: Delete project with given id.
      operationId: deleteProductById
      tags:
        - Product
      parameters:
        - name: id
          in: path
          description: ID of product to fetch.
          required: true
          type: number
          format: integer
        - name: user
          in: header
          description: User nickname
          required: true
          type: string
      responses:
        '200':
          description: Deletion status
          schema:
            type: boolean
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/product/category/{categoryId}':
    get:
      summary: Get products by category
      description: Get all products in given category
      operationId: findProductByCategory
      tags:
        - Product
      parameters:
        - name: categoryId
          in: path
          description: ID of category to fetch.
          required: true
          type: number
          format: integer
        - name: user
          in: header
          description: User nickname
          required: true
          type: string
      responses:
        '200':
          description: A product with given id.
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /search:
    get:
      summary: Search item
      description: Search items by given parameters.
      tags:
        - Product
      parameters:
        - name: minPrice
          in: query
          description: Minimum price.
          required: false
          type: number
          format: double
        - name: maxPrice
          in: query
          description: Maximum price.
          required: false
          type: number
          format: double
        - name: name
          in: query
          required: false
          type: string
          description: Name of product
        - name: user
          in: header
          description: User nickname
          required: true
          type: string
      responses:
        '200':
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /category:
    get:
      summary: Returns all categories
      description: Returns all existing categories
      tags:
        - Category
      parameters:
        - name: user
          in: header
          description: User nickname
          required: true
          type: string
      responses:
        '200':
          description: Get all categories
          schema:
            type: array
            items:
              $ref: '#/definitions/category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create new Category
      description: Create new Category
      tags:
        - Category
      parameters:
        - name: user
          in: header
          description: User nickname
          required: true
          type: string
        - name: category
          in: body
          description: new category
          required: true
          schema:
            $ref: '#/definitions/category'
      responses:
        '200':
          description: The newly created category
          schema:
            $ref: '#/definitions/category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/category/{id}':
    get:
      summary: Get category by id
      description: Get a single category by his id
      parameters:
        - name: id
          in: path
          description: ID of category to fetch.
          required: true
          type: number
          format: integer
        - name: user
          in: header
          description: User nickname
          required: true
          type: string
      tags:
        - Category
      responses:
        '200':
          description: Category with given id.
          schema:
            $ref: '#/definitions/category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update category by id
      description: Update the category with the given id.
      parameters:
        - name: id
          in: path
          description: ID of category to fetch.
          required: true
          type: number
          format: integer
        - name: user
          in: header
          description: User nickname
          required: true
          type: string
        - name: category
          in: body
          description: new category
          required: true
          schema:
            $ref: '#/definitions/category'
      tags:
        - Category
      responses:
        '200':
          description: The updated category.
          schema:
            $ref: '#/definitions/category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete category by id
      description: Delete the category with the given id.
      parameters:
        - name: id
          in: path
          description: ID of category to fetch.
          required: true
          type: number
          format: integer
        - name: user
          in: header
          description: User nickname
          required: true
          type: string
      tags:
        - Category
      responses:
        '200':
          description: Result of deletion.
          schema:
            type: boolean
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  product:
    type: object
    properties:
      id:
        $ref: '#/definitions/ElementId'
      name:
        type: string
        description: Name of product.
      price:
        type: number
        format: double
        description: Price of product.
      details:
        type: string
        description: Details of Product.
      categoryId:
        type: number
        format: integer
        description: Id of Category.
  category:
    type: object
    properties:
      id:
        $ref: '#/definitions/ElementId'
      name:
        type: string
        description: Name of category.
  ElementId:
    type: number
    format: integer
    description: Unique identifier representing a specific element
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string